import de.undercouch.gradle.tasks.download.Download

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'com.github.rodionmoiseev.gradle.plugins', name: 'idea-utils', version: '0.2'
    }
}

plugins {
    id "de.undercouch.download" version "3.1.1"
}

apply plugin:'java'
apply plugin:"jacoco"
apply plugin: 'maven-publish'

group = project.property("group")
version = project.property("version")
sourceCompatibility = project.property("sourceversion")
targetCompatibility = project.property("sourceversion")

jar
{
    eachFile
    {
        copyDetails ->
        if (copyDetails.path == 'plugin.yml')
        {
            filter
            {
                line -> line.replace('{{version}}', "$version")
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

repositories
{
    mavenLocal()
    mavenCentral()
    maven { url('https://nexus.philderbeast.com/repository/artifactory-releases/') }
    
    // Spigot Main repo
    maven { url('https://hub.spigotmc.org/nexus/content/repositories/snapshots/') }

    // Bungeecord Repo
    // For spigot-api
    maven { url('https://oss.sonatype.org/content/repositories/snapshots') }
    
    // maven { url('https://jitpack.io/') }
    // maven { url('http://repo.mcstats.org/content/groups/public') }

}

jacocoTestReport
{
    reports
    {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

build.dependsOn jar

dependencies
{

    compileOnly group:'org.spigotmc',
            name:'spigot-api',
            version: "1.14.2-R0.1-SNAPSHOT"
            // project.property("apiversion")

    //testing dependencys
    testCompile group:"junit",
                name:"junit",
                version:"4.12"

    testCompile group:"org.mockito",
                name:"mockito-core",
                version:"2.+"

}

task deploy(type: Copy, dependsOn: ['build']) {
    from "${buildDir}/libs"
    into "final/"
}

task setupDevServer(dependsOn: 'extractServerJar', type: Copy) {
    from 'config/serverfiles'
    into 'testserver'
}

task copyPluginToTestserver(dependsOn: ['build', 'jar'], type: Copy) {
    from "${buildDir}/libs"
    include "*.jar"
    into "testserver/plugins"
}

task prepareDevServer(dependsOn: ['buildSpigot', 'setupDevServer', 'copyPluginToTestserver']) {}

task startDevServer(dependsOn: [prepareDevServer], type: JavaExec) {
    classpath configurations.compile, configurations.runtime
    main = "-jar"
    args "server.jar"
    workingDir = "testserver/"
    standardInput = System.in
}

// START Building Spigot and Bukkit
def spigotBuildDir = new File("$buildDir/spigot/")

task extractServerJar(type: Copy) {
    from spigotBuildDir
    into "testserver/"

    include "spigot-" + project.property("apibuildtoolversion") + ".jar"

    rename  "spigot-" + project.property("apibuildtoolversion") + ".jar", "server.jar"
}

task setupWorkspace(dependsOn: ['buildSpigot']) {
}

task buildSpigot(type: Exec) {

    if (hasSpigotJar()) {
        enabled = false
        dependsOn = []
    } else {
        dependsOn = ['downloadBuildTool']
    }

    // Determine the current OS.
    def os_name = System.getProperty("os.name").toLowerCase()
    def os_windows = os_name.contains("windows")
    def os_linux = os_name.contains("linux")

    workingDir = spigotBuildDir

    if (os_windows)
    {
        executable = 'C:\\Program Files\\Git\\bin\\bash.exe'
    }else if(os_linux)
    {
        executable = 'bash'
    }

    args = ['-c', 'java -jar ./BuildTools.jar --rev ' + project.property("apibuildtoolversion") ]
}

task downloadBuildTool(type: Download) {
    spigotBuildDir.mkdirs()
    src project.property("buildtoolurl")
    dest new File(spigotBuildDir, "BuildTools.jar")
}

def hasSpigotJar() {
    def file = new File("$buildDir/spigot/spigot-" + project.property("apibuildtoolversion") + ".jar")
    return file.exists()
}